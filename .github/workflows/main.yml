name: Checks and Deploy

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, edited, ready_for_review]
    branches:
      - main

env:
  AWS_REGION: ap-southeast-1
  CLOUDFRONT_DISTRIBUTION_ID: E3KORYPPQ9K07A
  BUCKET_NAME: studentcommunityday.com

permissions:
  id-token: write
  contents: read

jobs:
  checks:
    runs-on: ubuntu-24.04-arm
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Cache dependencies
        uses: actions/cache@v4
        id: cache-deps
        with:
          path: node_modules
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - name: List dependencies
        if: ${{ steps.cache-deps.outputs.cache-hit != 'true' }}
        continue-on-error: true
        run: bun pm ls

      - name: Install dependencies
        run: bun ci

      - name: Run type checking
        run: bun run check-types

      - name: Check formatting
        run: bun run format

      - name: Run linter and fix issues
        run: bun eslint --fix

  deploy:
    runs-on: ubuntu-24.04-arm
    needs: checks
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Cache dependencies
        uses: actions/cache@v4
        id: cache-deps
        with:
          path: node_modules
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - name: Install dependencies
        run: bun ci

      - name: Build Next.js application
        run: bun run build

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::876497563387:role/SCD2025
          aws-region: ${{ env.AWS_REGION }}

      - name: Sync files to S3
        run: |
          # Sync the out directory to S3 bucket with no caching
          aws s3 sync ./out s3://${{ env.BUCKET_NAME }} --delete --cache-control "public, max-age=0, must-revalidate"

      - name: Invalidate CloudFront cache
        run: |
          # Create a CloudFront invalidation for all paths (/*)
          aws cloudfront create-invalidation \
            --distribution-id ${{ env.CLOUDFRONT_DISTRIBUTION_ID }} \
            --paths "/*"
